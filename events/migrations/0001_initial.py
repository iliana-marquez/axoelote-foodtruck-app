# Generated by Django 4.2.24 on 2025-09-15 05:33

import cloudinary.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_title', models.CharField(max_length=100)),
                ('event_type', models.CharField(choices=[('open', 'Open Event'), ('private', 'Private Event'), ('closure', 'Closure')], max_length=20)),
                ('start_datetime', models.DateTimeField()),
                ('end_datetime', models.DateTimeField()),
                ('street_address', models.CharField(blank=True, max_length=80)),
                ('postcode', models.CharField(blank=True, max_length=20, null=True)),
                ('town_or_city', models.CharField(blank=True, max_length=40)),
                ('country', django_countries.fields.CountryField(blank=True, max_length=2, null=True)),
                ('description', models.TextField()),
                ('message', models.TextField(blank=True, help_text='Internal notes: vendor contacts, setup requirements, etc.')),
                ('status', models.CharField(choices=[('active', 'Active'), ('postponed', 'Postponed'), ('cancelled', 'Cancelled')], default='active', max_length=20)),
                ('event_photo', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='image')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_events', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['start_datetime'],
            },
        ),
    ]
